[versions]
assertj = "3.25.2"

azure = "5.7.0"
azure-identity = "1.10.4"

# we provide the latest version of guava here, as queryDSL pulls in a very old (and vulnerable) version of guava, and we want to override that here
guava = "32.1.3-jre"

jgiven = "1.3.1"
jupiter = "5.10.2"

kotlin-logging = "3.0.5"

logstash = "7.4"

opentelemetry = "1.30.1"

shedlock = "5.9.1"

spring-boot = "3.2.5"
spring-cloud = "2023.0.1"

[libraries]
archunit-ccv = { module = "io.cloudflight.cleancode.archunit:archunit-cleancode-verifier", version = "0.5.0" }

assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }

awaitility = { module = "org.awaitility:awaitility", version = "4.2.1" }

azure-dependencies-bom = { module = "com.azure.spring:spring-cloud-azure-dependencies", version.ref = "azure" }
azure-identity = { module = "com.azure:azure-identity", version.ref = "azure-identity" }

jackson-databind-nullable = { module = "org.openapitools:jackson-databind-nullable", version = "0.2.6" }

jgiven-html5-report = { module = "com.tngtech.jgiven:jgiven-html5-report", version.ref = "jgiven" }
jgiven-junit5 = { module = "com.tngtech.jgiven:jgiven-html5-report", version.ref = "jgiven" }
jgiven-spring-junit5 = { module = "com.tngtech.jgiven:jgiven-spring-junit5", version.ref = "jgiven" }
jgiven-kotlin = { module = "io.toolisticon.testing:jgiven-kotlin", version = "1.3.1.0" }

junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jupiter" }
junit-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "jupiter" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiter" }

guava = { module = "com.google.guava:guava", version.ref = "guava" }
kotlin-logging = { module = "io.github.microutils:kotlin-logging-jvm", version.ref = "kotlin-logging" }

logback-logstash-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash" }
logback-length-splitter = { module = "com.latch:logback-length-splitting-appender", version = "0.4.0" }

mockk = { module = "io.mockk:mockk-jvm", version = "1.13.8" }

opentelemetry-bom = { module = "io.opentelemetry:opentelemetry-bom", version.ref = "opentelemetry" }

quickperf-bom = { module = "org.quickperf:quick-perf-bom", version = "1.1.0" }

shedlock-spring = { module = "net.javacrumbs.shedlock:shedlock-spring", version.ref = "shedlock" }
shedlock-provider-redis-spring = { module = "net.javacrumbs.shedlock:shedlock-provider-redis-spring", version.ref = "shedlock" }

spring-boot-bom = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
spring-cloud-bom = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "spring-cloud" }

springfox-swagger2 = { module = "io.springfox:springfox-swagger2", version = "3.0.0" }
swagger-annotations2 = { module = "io.swagger:swagger-annotations", version = "1.6.14" }
swagger-annotations3 = { module = "io.swagger.core.v3:swagger-annotations", version = "2.2.15" }

testcontainers-junit4-mock = { module = "io.quarkus:quarkus-junit4-mock", version = "3.2.1.Final" }
